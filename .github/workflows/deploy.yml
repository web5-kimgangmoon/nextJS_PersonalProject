name: Deploy Project

on:
  push:
    branches:
      - main

jobs:
  test_node:
    runs-on: ubuntu-latest
    steps:
      - name: checkout repository
        uses: actions/checkout@v4

      - name: Add SSH key
        uses: webfactory/ssh-agent@v0.5.4
        with:
          ssh-private-key: ${{ secrets.EC2_KEY }}

      - name: Ensure SSH directory exists
        run: |
          mkdir -p ~/.ssh
          chmod 700 ~/.ssh

      - name: Add SSH known hosts
        run: ssh-keyscan -H ${{ secrets.EC2_HOST }} >> ~/.ssh/known_hosts

      - name: test node
        run: |
          ssh ${{ secrets.EC2_USER }}@${{ secrets.EC2_HOST }} '
          export NVM_DIR="$HOME/.nvm"
          [ -s "$NVM_DIR/nvm.sh" ] && . "$NVM_DIR/nvm.sh" || {
          echo "nvm.sh not found"
          exit 1
          }

          nvm -v
          nvm use --lts
          node -v
          npm -v
          npm install -g pm2'

  test_mysql:
    runs-on: ubuntu-latest
    steps:
      - name: checkout repository
        uses: actions/checkout@v4

      - name: Add SSH key
        uses: webfactory/ssh-agent@v0.5.4
        with:
          ssh-private-key: ${{ secrets.EC2_KEY }}

      - name: Ensure SSH directory exists
        run: |
          mkdir -p ~/.ssh
          chmod 700 ~/.ssh

      - name: Add SSH known hosts
        run: ssh-keyscan -H ${{ secrets.EC2_HOST }} >> ~/.ssh/known_hosts

      - name: check mysql
        run: |
          ssh ${{ secrets.EC2_USER }}@${{ secrets.EC2_HOST }} '
          sudo service mysql status'

      - name: test mysql
        run: |
          ssh ${{ secrets.EC2_USER }}@${{ secrets.EC2_HOST }} '
          mysql -u ${{ secrets.EC2_MYSQL_USER }} -p${{ secrets.EC2_MYSQL_PASSWORD }} -e "SHOW DATABASES;"'

  deploy_front:
    runs-on: ubuntu-latest
    needs:
      - test_node
    steps:
      - name: checkout repository
        uses: actions/checkout@v4

      - name: Add SSH key
        uses: webfactory/ssh-agent@v0.5.4
        with:
          ssh-private-key: ${{ secrets.EC2_KEY }}

      - name: Ensure SSH directory exists
        run: |
          mkdir -p ~/.ssh
          chmod 700 ~/.ssh

      - name: Add SSH known hosts
        run: ssh-keyscan -H ${{ secrets.EC2_HOST }} >> ~/.ssh/known_hosts

      - name: Install Dependencies of Front
        working-directory: ./front
        run: npm i

      - name: Build Front
        working-directory: ./front
        run: npm run build

      - name: Copy Files to EC2
        run: |
          ssh ${{ secrets.EC2_USER }}@${{ secrets.EC2_HOST }} '
            rm -rf /var/www/front
            mkdir /var/www/front
            mkdir /var/www/front/.next
            mkdir /var/www/front/public'
          rsync -avz -e "ssh" ./front/.next/ ${{ secrets.EC2_USER }}@${{ secrets.EC2_HOST }}:/var/www/front/.next
          rsync -avz -e "ssh" ./front/public/ ${{ secrets.EC2_USER }}@${{ secrets.EC2_HOST }}:/var/www/front/public
          rsync -avz -e "ssh" ./front/package.json ${{ secrets.EC2_USER }}@${{ secrets.EC2_HOST }}:/var/www/front/package.json
          ssh ${{ secrets.EC2_USER }}@${{ secrets.EC2_HOST }} '
          export NVM_DIR="$HOME/.nvm"
          [ -s "$NVM_DIR/nvm.sh" ] && . "$NVM_DIR/nvm.sh" || {
          echo "nvm.sh not found"
          exit 1
          }
          nvm -v
          nvm use --lts
          node -v
          npm -v
          cd  /var/www/front
          npm i --production'

      - name: Start nextjs
        run: |
          ssh ${{ secrets.EC2_USER }}@${{ secrets.EC2_HOST }} '
          cd /var/www/front
          export NVM_DIR="$HOME/.nvm"
          [ -s "$NVM_DIR/nvm.sh" ] && . "$NVM_DIR/nvm.sh" || {
          echo "nvm.sh not found"
          exit 1
          }
          npm install -g pm2
          pm2 stop front
          pm2 start npm --name "front" -- run start'

  deploy_back:
    runs-on: ubuntu-latest
    needs:
      - test_node
      - test_mysql
    steps:
      - name: checkout repository
        uses: actions/checkout@v4

      - name: Add SSH key
        uses: webfactory/ssh-agent@v0.5.4
        with:
          ssh-private-key: ${{ secrets.EC2_KEY }}

      - name: Ensure SSH directory exists
        run: |
          mkdir -p ~/.ssh
          chmod 700 ~/.ssh

      - name: Add SSH known hosts
        run: ssh-keyscan -H ${{ secrets.EC2_HOST }} >> ~/.ssh/known_hosts

      - name: Install Dependencies of Back
        working-directory: ./back
        run: npm i

      - name: Build Back
        working-directory: ./back
        run: npx tsc

      - name: Copy Files to EC2
        run: |
          ssh ${{ secrets.EC2_USER }}@${{ secrets.EC2_HOST }} '
            rm -rf /var/www/back
            mkdir /var/www/back
            mkdir /var/www/back/public'
          rsync -avz -e "ssh" ./back/build/ ${{ secrets.EC2_USER }}@${{ secrets.EC2_HOST }}:/var/www/back
          rsync -avz -e "ssh" ./back/package.json ${{ secrets.EC2_USER }}@${{ secrets.EC2_HOST }}:/var/www/back/package.json
          rsync -avz -e "ssh" ./back/public/ ${{ secrets.EC2_USER }}@${{ secrets.EC2_HOST }}:/var/www/back/public
          ssh ${{ secrets.EC2_USER }}@${{ secrets.EC2_HOST }} '
          export NVM_DIR="$HOME/.nvm"
          [ -s "$NVM_DIR/nvm.sh" ] && . "$NVM_DIR/nvm.sh" || {
          echo "nvm.sh not found"
          exit 1
          }
          cd  /var/www/back
          npm i --production
          echo PORT=3080 >> .env
          echo EC2_MYSQL_USER=${{ secrets.EC2_MYSQL_USER }} >> .env
          echo EC2_MYSQL_PASSWORD=${{ secrets.EC2_MYSQL_PASSWORD }} >> .env
          echo EC2_MYSQL_DATABASE=${{ secrets.EC2_MYSQL_DATABASE }} >> .env
          '

      - name: Start Server
        run: |
          ssh ${{ secrets.EC2_USER }}@${{ secrets.EC2_HOST }} '
          export NVM_DIR="$HOME/.nvm"
          [ -s "$NVM_DIR/nvm.sh" ] && . "$NVM_DIR/nvm.sh" || {
          echo "nvm.sh not found"
          exit 1
          }          
          npm install -g pm2
          pm2 stop back
          pm2 start /var/www/back/server.js --name back --no-watch'
